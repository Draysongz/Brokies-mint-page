"use client";
import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { useMemo } from "react";
import { UmiProvider } from "./utils/UmiProvider";
import { SolanaTimeProvider } from "./utils/SolanaTimeContext";
import { WalletAdapterNetwork } from "@solana/wallet-adapter-base";
import { WalletProvider } from "@solana/wallet-adapter-react";
import { WalletModalProvider } from "@solana/wallet-adapter-react-ui";
import { ChakraProvider } from "@chakra-ui/react";
import "@solana/wallet-adapter-react-ui/styles.css";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  let network = WalletAdapterNetwork.Devnet;
  if (
    process.env.NEXT_PUBLIC_ENVIRONMENT === "mainnet-beta" ||
    process.env.NEXT_PUBLIC_ENVIRONMENT === "mainnet"
  ) {
    network = WalletAdapterNetwork.Mainnet;
  }
  let endpoint = "https://api.devnet.solana.com";
  if (process.env.NEXT_PUBLIC_RPC) {
    endpoint = process.env.NEXT_PUBLIC_RPC;
  }
  const wallets = useMemo(() => [], []);
  return (
    <html lang="en">
      <head>  
        <link rel="icon" href="/logo.jpeg" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <meta name="description" content="BrokeCoin NFT MINT" />
        <meta name="keywords" content="Solana, NFT, Mint, Candy Machine" />
        <meta name="author" content="BROKIE" />
        <title>BrokeCoin NFT MINT</title>
      </head>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <ChakraProvider>
          <WalletProvider wallets={wallets}>
            <UmiProvider endpoint={endpoint}>
              <WalletModalProvider>
              <SolanaTimeProvider>
                {children}
              </SolanaTimeProvider>
            </WalletModalProvider>
            </UmiProvider>
          </WalletProvider>
        </ChakraProvider>
      </body>
    </html>
  );
}
